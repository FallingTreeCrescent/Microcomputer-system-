CODE SEGMENT
	ASSUME CS:CODE,DS:DATA
START:
	MOV AX,DATA		;导入DATA
	MOV DS,AX
	
	MOV AX,00H		;寄存器A清零
	LEA BX,TAB		;记录TAB表首地址
	
	MOV DX,M8255	;设置8255为A,B口输出，C口输入
	MOV AL,81H
	OUT DX,AL
	
MAIN:
	MOV AL,11110111B	;需要扫描的列，输出0
	MOV CX,04H			;一共需要扫描4列
M1:
	MOV DX,A8255
	OUT DX,AL			;从X口输出列选信号
	SHR AL,1			;右移一位
	OR AL,11110000B
	
	PUSH AX			;保存列选信号
	PUSH CX			;保存循环计数
	MOV DX,C8255
	IN AL,DX			;从Y口输入键盘反馈信号
	AND AL,0FH			;Y口接8255的C端口低四位，去除多余信息
	CMP AL,0FH			;如果低四位是1111，表明没有按键按下
	JE M2
	CALL SHOW		;没有跳去M2，则表明有按键按下
	JMP M3		;如果有按键按下，则跳过M2（互斥计数）阶段
M2:
	CMP FLAG,00H	;维持互斥信号，FLAG=MAX(0,FLAG-1)
	JE M3			;FLAG=0表示4列都没有按键按下，FLAG初值为4
	DEC FLAG		;每扫描一列，并且没有按键按下时，FLAG自减1次
M3:
	CALL CLEAR		;显示数码管的内容
	POP CX		;先取出循环计数
	POP AX		;再取出列选信号
	
	CALL DELAY	;稍微延迟
	LOOP M1
	
	JMP MAIN
	
SHOW:
	NOT AL			;NOT取反（从这里开始，通过Y口输入信息来判断按下的按键）
	AND AX,0FH		;AND取低4位（详情见下边第4点“关于按键判断”）
	CMP AL,01H	;0001
		JE D1
	CMP AL,02H	;0010
		JE D2
	CMP AL,04H	;0100
		JE D3
	CMP AL,08H	;1000
		JE D4
D1: MOV AL,04H
	JMP D5
D2: MOV AL,08H
	JMP D5
D3: MOV AL,0CH
	JMP D5
D4: MOV AL,10H
	JMP D5
D5: ADD AL,CL
	SUB AL,05H
	MOV SI,AX			;到这里，按下的按键被转化为独一无二的索引值
	CMP FLAG,00H		;是否存在互斥，非0表示存在互斥
	JNE DFI
	
	LEA BX,TAB		;把TAB的首地址放到BX
	MOV AL,T5		;将T5的值放到T6
	MOV T6,AL
	MOV AL,T4		;将T4的值放到T5
	MOV T5,AL
	MOV AL,T3		;将T3的值放到T4
	MOV T4,AL
	MOV AL,T2		;将T2的值放到T3
	MOV T3,AL
	MOV AL,T1		;将T1的值放到T2
	MOV T2,AL
	MOV AX,[BX+SI]		;将按键索引值放到T1
	MOV T1,AL			;T1是最右端的数码管
	
	CALL DELAY
DFI:
	MOV FLAG,04H		;FLAG初值设置
	RET
	
CLEAR:
	LEA BX,T1			;以T1为首地址，索引T2~T6
	MOV AL,11011111B
	MOV SI,00H
	MOV CX,06H			;数码管显示，与实验八相同
	MC2:
		MOV DX,A8255
		OUT DX,AL
		SHR AL,1
		OR AL,11000000B
		PUSH AX			;保存AX的值
			MOV DX,B8255
			MOV AL,[BX+SI]
			OUT DX,AL
		POP AX			;取出AX的值
		INC SI			;地址偏移自增
		CALL DELAY
	LOOP MC2
	RET

DELAY:
	PUSH BX
	MOV BX, 03FFH
	DEL:
		DEC BX
		JNZ DEL
	POP BX
	RET
CODE ENDS
	END START
